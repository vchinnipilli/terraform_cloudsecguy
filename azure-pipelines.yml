# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: hook
  value: https://hooks.slack.com/services/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 
- name: user
  value: azure-pipeline
- name: channel
  value: infrastucture-code-scanning

steps:

- script: |
    echo "Installing Requirements"
    sudo apt install ruby-full -y
    #sudo npm cache clean -f
    #sudo npm install -g pipe-to-slack --force
    mv .p2s ~/.p2s 
    echo "Scan Executed Successfully"
  displayName: 'Setting up'

#- script: |
#    echo "Initiating Terrascan"
#    docker run -v "$(pwd):/src" accurics/terrascan -l /src
#    echo "Scan Executed Successfully"
#  displayName: 'Terrascan'
#
#- script: |
#    echo "Initiating Checkov Scan"
#    docker run -v "$(pwd):/src" bridgecrew/checkov -d /src | p2s '#infrastucture-code-scanning'
#    echo "Scan Executed Successfully"
#  displayName: 'Checkov Scan'
#  
#- script: |
#    echo "Initiating tfsec Scan"
#    docker run --rm -v "$(pwd):/src" liamg/tfsec /src
#    echo "Scan Executed Successfully"
#  displayName: 'tfsec Scan'
#
#- script: |
#    echo "Initiating Cloudformation Scan"
#    docker run -v "$(pwd):/src" -t stelligent/cfn_nag /src/cloud_formation/
#    echo "Scan Executed Successfully"
#  displayName: 'Cloudformation Scan'